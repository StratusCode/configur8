- case: sanity
  main: |
    from configur8 import env

    x = env.email("FOO")

    reveal_type(x)  # N: Revealed type is "builtins.str"

- case: default
  main: |
    from configur8 import env

    x = env.email("FOO", "foo@bar.com")

    reveal_type(x)  # N: Revealed type is "builtins.str"

- case: bad_default
  main: |
    from configur8 import env

    x = env.email("FOO", 2)
  out: |
    main:3: error: Argument 2 to "__call__" of "EnvVar" has incompatible type "int"; expected "Union[Empty, str]"  [arg-type]

- case: optional
  main: |
    from configur8 import env

    x = env.email.optional("FOO")

    reveal_type(x)  # N: Revealed type is "Union[builtins.str, None]"

- case: list
  main: |
    from configur8 import env

    x = env.email.list("FOO")

    reveal_type(x)  # N: Revealed type is "builtins.list[builtins.str]"

- case: list_optional
  main: |
    from configur8 import env

    x = env.email.list_optional("FOO")

    reveal_type(x)  # N: Revealed type is "Union[builtins.list[builtins.str], None]"
